# Copyright 2017 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "common.conf"
include "frontend.conf"

appName = "income-tax-subscription-frontend"
application.router = prod.Routes

play.filters.headers.contentSecurityPolicy = "default-src 'self' 'unsafe-inline' localhost:9000 localhost:9032 localhost:9250 www.google-analytics.com data:"


# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.FrontendModule"
play.http.filters = core.config.filters.ServiceFilters


# Custom error handler
play.http.errorHandler = "core.config.ErrorHandler"


# Global request handler
# ~~~~


# Connector request time out
ws.timeout {
  request: 120000
  connection: 120000
}

# session.timeoutSeconds = 20

microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = true
    }
  }

  services {
    contact-frontend {
      host = localhost
      port = 9250
    }

    auth {
      host = localhost
      port = 8500
    }

    session-cache {
      host = localhost
      port = 8400
      domain = keystore
      income-tax-subscription-frontend.cache = "income-tax-subscription-frontend"
    }

    subscription-service {
      host = localhost
      port = 9560
    }

    preferences-frontend {
      host = localhost
      port = 9024
    }

    gg-stubs {
      host = localhost
      port = 8082
    }

    entity-resolver {
      host = localhost
      port = 8015
    }

    preferences {
      host = localhost
      port = 8025
    }

    authenticator {
      host = localhost
      port = 9905
    }

    gg-authentication {
      host = localhost
      port = 9987
    }

    government-gateway {
      host = localhost
      port = 8570
    }

    gg-admin {
      host = localhost
      port = 9936
    }

    tax-enrolments {
      host = localhost
      port = 9995
    }

    matching-stubs {
      host = localhost
      port = 9353
    }

    citizen-details {
      host = localhost
      port = 9337
    }

    address-lookup-frontend {
      host = localhost
      port = 9028
    }

    agent-microservice {
      host = localhost
      port = 9562
    }
  }

}

feature-switch {
  show-guidance = true // Set to false when we want to skip guidance
  enable-ip-whitelisting = false // only set to true for prod prior to release
  user-matching = false // Set to true to enable user matching instead of IV
  enable-registration = false // Set to true to enable the registration routes
  new-preferences-api = false // Set to true to enable the new paperless preferences API
}

ip-whitelist {
  urls = "127.0.0.1"
  excludeCalls = "/healthcheck,/ping/ping"
}

lockout {
  maxAttempts = 3
  lockOutSeconds = 60
}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = false
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token = N/A
  host = auto
}

assets {
  version = "2.252.0"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

contact-frontend {
  host = "http://localhost:9250"
}

base {
  url = "http://localhost:9561"
}

government-gateway {
  url = "http://localhost:9025"
  sign-in.url = ${government-gateway.url}"/gg/sign-in"
}

two-factor {
  url = "http://localhost:9949/coafe/two-step-verification/register/"
}

bta {
  url = "https://www.tax.service.gov.uk/business-account"
}

shutter-page {
  url = "https://www.tax.service.gov.uk/outage-income-tax-subscription/"
}

contact-hmrc {
  url = "https://www.gov.uk/contact-hmrc"
}

identity-verification-frontend {
  # for running this locally this should always point to the stub, but must be set to the frontend in the other environments
  url = "http://localhost:9949"
}

preferences-frontend  {
  url = "http://localhost:9024"
}

sa-signup {
  url = "https://www.gov.uk/log-in-file-self-assessment-tax-return/register-if-youre-not-self-employed"
}

agent-services {
  url = "http://localhost:9437/agent-subscription"
}

agent-account {
  url = "https://www.gov.uk/guidance/client-authorisation-an-overview"
}

agent-auth {
  url = "https://www.gov.uk/guidance/client-authorisation-an-overview"
}

income-tax-subscription-agent-frontend {
  url = "http://localhost:9562"
}
# Assets
GET         /assets/*file                               controllers.Assets.at(path="/public", file)

# Home controller
GET         /                                           controllers.usermatching.HomeController.home
GET         /index                                      controllers.usermatching.HomeController.index

# SignOut Controller
GET         /logout                                     controllers.SignOutController.signOut(origin: String)

# Preferences routes
GET         /preferences                                controllers.individual.PreferencesController.checkPreferences
GET         /callback                                   controllers.individual.PreferencesController.callback
GET         /paperless-error                            controllers.individual.PreferencesController.show
POST        /paperless-error                            controllers.individual.PreferencesController.submit

# Income Source Routes
GET         /details/income-receive                     controllers.individual.incomesource.IncomeSourceController.show(editMode: Boolean ?= false)
POST        /details/income-receive                     controllers.individual.incomesource.IncomeSourceController.submit(editMode: Boolean ?= false)

# Summary Routes
GET         /check-your-answers                         controllers.individual.subscription.CheckYourAnswersController.show
POST        /check-your-answers                         controllers.individual.subscription.CheckYourAnswersController.submit

# Self employments summary Routes
GET         /details/business-list                      controllers.individual.subscription.SelfEmploymentsCYAController.show
POST        /details/business-list                      controllers.individual.subscription.SelfEmploymentsCYAController.submit

#Address lookup Routes
GET        /address-lookup-initialise/:itsaId           controllers.individual.business.AddressLookupRoutingController.initialiseAddressLookupJourney(itsaId: String)
GET        /details/address-lookup/:itsaId              controllers.individual.business.AddressLookupRoutingController.addressLookupRedirect(itsaId: String, id: Option[String] ?= None)

# Confirmation Routes
GET         /confirmation                               controllers.individual.subscription.ConfirmationController.show

# Session Timeout Route
GET         /session-timeout                            controllers.SessionTimeoutController.show

# Already enrolled
GET         /already-enrolled                           controllers.individual.subscription.AlreadyEnrolledController.show

# No NINO Routes
GET         /register-for-SA                            controllers.usermatching.NoSAController.show

# Affinity Group Error
GET         /error/affinity-group                       controllers.usermatching.AffinityGroupErrorController.show

# Claim Subscription
GET         /claim-subscription                         controllers.individual.subscription.ClaimSubscriptionController.claim


# User Matching
GET         /user-details                               controllers.usermatching.UserDetailsController.show(editMode: Boolean ?= false)
POST        /user-details                               controllers.usermatching.UserDetailsController.submit(editMode: Boolean ?= false)

# User Lockout
GET         /error/lockout                              controllers.usermatching.UserDetailsLockoutController.show

# Confirm User
GET         /confirm-user                               controllers.usermatching.ConfirmUserController.show()
POST        /confirm-user                               controllers.usermatching.ConfirmUserController.submit()

# User Details Error
GET         /error/user-details                         controllers.usermatching.UserDetailsErrorController.show()
POST        /error/user-details                         controllers.usermatching.UserDetailsErrorController.submit()

# Cannot Use Service
GET         /error/cannot-use-service                   controllers.individual.incomesource.CannotUseServiceController.show()

# Cannot use service because not eligible
GET         /cannot-use-service-yet                     controllers.individual.eligibility.NotEligibleForIncomeTaxController.show()

#Language
GET         /language/:lang                             controllers.language.LanguageSwitchController.switchToLanguage(lang: String)

# Feedback Routes
GET         /feedback                                   controllers.FeedbackController.show
POST        /feedback                                   controllers.FeedbackController.submit
GET         /thank-you                                  controllers.FeedbackController.thankyou

################## Business Routes

#Initialise Routes
GET         /business                                   controllers.individual.business.InitialiseController.initialise

#What Tax Year To Sign Up Routes
GET         /business/what-year-to-sign-up              controllers.individual.business.WhatYearToSignUpController.show(editMode: Boolean ?= false)
POST        /business/what-year-to-sign-up              controllers.individual.business.WhatYearToSignUpController.submit(editMode: Boolean ?= false)

#Business Name Routes
GET         /business/name                              controllers.individual.business.BusinessNameController.show(id: String ?= "", editMode: Boolean ?= false)
POST        /business/name                              controllers.individual.business.BusinessNameController.submit(id: String ?= "", editMode: Boolean ?= false)

#Business Trade Name Routes
GET         /business/trade                             controllers.individual.business.BusinessTradeNameController.show(id: String, editMode: Boolean ?= false)
POST        /business/trade                             controllers.individual.business.BusinessTradeNameController.submit(id: String, editMode: Boolean ?= false)

#Business Start Date Routes
GET         /business/start-date                        controllers.individual.business.BusinessStartDateController.show(id: String, editMode: Boolean ?= false)
POST        /business/start-date                        controllers.individual.business.BusinessStartDateController.submit(id: String, editMode: Boolean ?= false)

#Remove Business Routes
GET         /business/remove                            controllers.individual.subscription.RemoveBusinessController.show(id: String)

#Income Type Routes
GET         /business/accounting-method                 controllers.individual.business.BusinessAccountingMethodController.show(editMode: Boolean ?= false)
POST        /business/accounting-method                 controllers.individual.business.BusinessAccountingMethodController.submit(editMode: Boolean ?= false)

#Property Accounting Method Routes
GET         /business/accounting-method-property        controllers.individual.business.PropertyAccountingMethodController.show(editMode: Boolean ?= false)
POST        /business/accounting-method-property        controllers.individual.business.PropertyAccountingMethodController.submit(editMode: Boolean ?= false)

#Foreign Property Accounting Method Routes
GET         /business/overseas-property-accounting-method        controllers.individual.business.OverseasPropertyAccountingMethodController.show(editMode: Boolean ?= false)
POST        /business/overseas-property-accounting-method        controllers.individual.business.OverseasPropertyAccountingMethodController.submit(editMode: Boolean ?= false)

#Property Commencement Date Routes
GET         /business/property-commencement-date        controllers.individual.business.PropertyCommencementDateController.show(editMode: Boolean ?= false)
POST        /business/property-commencement-date        controllers.individual.business.PropertyCommencementDateController.submit(editMode: Boolean ?= false)

#Foreign Property Commencement Date Routes
GET         /business/overseas-property-start-date      controllers.individual.business.OverseasPropertyCommencementDateController.show(editMode: Boolean ?= false)
POST        /business/overseas-property-start-date      controllers.individual.business.OverseasPropertyCommencementDateController.submit(editMode: Boolean ?= false)
